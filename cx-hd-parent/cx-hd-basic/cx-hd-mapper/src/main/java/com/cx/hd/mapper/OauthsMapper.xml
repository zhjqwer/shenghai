<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cx.hd.mapper.OauthsMapper">
  <resultMap id="BaseResultMap" type="com.cx.hd.entity.Oauths">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="u_id" jdbcType="INTEGER" property="uId" />
    <result column="oauths_type" jdbcType="VARCHAR" property="oauthsType" />
    <result column="oauths_openid" jdbcType="VARCHAR" property="oauthsOpenid" />
    <result column="unionid" jdbcType="VARCHAR" property="unionid" />
    <result column="access_token" jdbcType="VARCHAR" property="accessToken" />
  </resultMap>
  <sql id="Base_Column_List">
    id, u_id, oauths_type, oauths_openid, unionid, access_token
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from oauths
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from oauths
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.cx.hd.entity.Oauths">
    insert into oauths (id, u_id, oauths_type, 
      oauths_openid, unionid, access_token
      )
    values (#{id,jdbcType=INTEGER}, #{uId,jdbcType=INTEGER}, #{oauthsType,jdbcType=VARCHAR}, 
      #{oauthsOpenid,jdbcType=VARCHAR}, #{unionid,jdbcType=VARCHAR}, #{accessToken,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.cx.hd.entity.Oauths">
    insert into oauths
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="uId != null">
        u_id,
      </if>
      <if test="oauthsType != null">
        oauths_type,
      </if>
      <if test="oauthsOpenid != null">
        oauths_openid,
      </if>
      <if test="unionid != null">
        unionid,
      </if>
      <if test="accessToken != null">
        access_token,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="uId != null">
        #{uId,jdbcType=INTEGER},
      </if>
      <if test="oauthsType != null">
        #{oauthsType,jdbcType=VARCHAR},
      </if>
      <if test="oauthsOpenid != null">
        #{oauthsOpenid,jdbcType=VARCHAR},
      </if>
      <if test="unionid != null">
        #{unionid,jdbcType=VARCHAR},
      </if>
      <if test="accessToken != null">
        #{accessToken,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cx.hd.entity.Oauths">
    update oauths
    <set>
      <if test="uId != null">
        u_id = #{uId,jdbcType=INTEGER},
      </if>
      <if test="oauthsType != null">
        oauths_type = #{oauthsType,jdbcType=VARCHAR},
      </if>
      <if test="oauthsOpenid != null">
        oauths_openid = #{oauthsOpenid,jdbcType=VARCHAR},
      </if>
      <if test="unionid != null">
        unionid = #{unionid,jdbcType=VARCHAR},
      </if>
      <if test="accessToken != null">
        access_token = #{accessToken,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cx.hd.entity.Oauths">
    update oauths
    set u_id = #{uId,jdbcType=INTEGER},
      oauths_type = #{oauthsType,jdbcType=VARCHAR},
      oauths_openid = #{oauthsOpenid,jdbcType=VARCHAR},
      unionid = #{unionid,jdbcType=VARCHAR},
      access_token = #{accessToken,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>