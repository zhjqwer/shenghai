<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.chuxin.mapper.GroupMasterMapper" >
  <resultMap id="BaseResultMap" type="com.chuxin.pojo.GroupMaster" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="group_id" property="groupId" jdbcType="INTEGER" />
    <result column="number_people" property="numberPeople" jdbcType="INTEGER" />
    <result column="group_type" property="groupType" jdbcType="VARCHAR" />
    <result column="group_state" property="groupState" jdbcType="INTEGER" />
    <result column="clustering_state" property="clusteringState" jdbcType="INTEGER" />
    <result column="group_target" property="groupTarget" jdbcType="INTEGER" />
    <result column="target_price" property="targetPrice" jdbcType="DECIMAL" />
    <result column="group_price" property="groupPrice" jdbcType="DECIMAL" />
    <result column="captain" property="captain" jdbcType="INTEGER" />
    <result column="join_number_people" property="joinNumberPeople" jdbcType="INTEGER" />
    <result column="lack_number_people" property="lackNumberPeople" jdbcType="INTEGER" />
    <result column="register_time" property="registerTime" jdbcType="TIMESTAMP" />
    <result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
    <result column="spare_one" property="spareOne" jdbcType="VARCHAR" />
    <result column="spare_two" property="spareTwo" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, group_id, number_people, group_type, group_state, clustering_state, group_target, 
    target_price, group_price, captain, join_number_people, lack_number_people, register_time, 
    end_time, spare_one, spare_two
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.chuxin.pojo.GroupMasterExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from group_master
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from group_master
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from group_master
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.chuxin.pojo.GroupMasterExample" >
    delete from group_master
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.chuxin.pojo.GroupMaster" >
    insert into group_master (id, group_id, number_people, 
      group_type, group_state, clustering_state, 
      group_target, target_price, group_price, 
      captain, join_number_people, lack_number_people, 
      register_time, end_time, spare_one, 
      spare_two)
    values (#{id,jdbcType=INTEGER}, #{groupId,jdbcType=INTEGER}, #{numberPeople,jdbcType=INTEGER}, 
      #{groupType,jdbcType=VARCHAR}, #{groupState,jdbcType=INTEGER}, #{clusteringState,jdbcType=INTEGER}, 
      #{groupTarget,jdbcType=INTEGER}, #{targetPrice,jdbcType=DECIMAL}, #{groupPrice,jdbcType=DECIMAL}, 
      #{captain,jdbcType=INTEGER}, #{joinNumberPeople,jdbcType=INTEGER}, #{lackNumberPeople,jdbcType=INTEGER}, 
      #{registerTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, #{spareOne,jdbcType=VARCHAR}, 
      #{spareTwo,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.chuxin.pojo.GroupMaster" >
    insert into group_master
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="groupId != null" >
        group_id,
      </if>
      <if test="numberPeople != null" >
        number_people,
      </if>
      <if test="groupType != null" >
        group_type,
      </if>
      <if test="groupState != null" >
        group_state,
      </if>
      <if test="clusteringState != null" >
        clustering_state,
      </if>
      <if test="groupTarget != null" >
        group_target,
      </if>
      <if test="targetPrice != null" >
        target_price,
      </if>
      <if test="groupPrice != null" >
        group_price,
      </if>
      <if test="captain != null" >
        captain,
      </if>
      <if test="joinNumberPeople != null" >
        join_number_people,
      </if>
      <if test="lackNumberPeople != null" >
        lack_number_people,
      </if>
      <if test="registerTime != null" >
        register_time,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
      <if test="spareOne != null" >
        spare_one,
      </if>
      <if test="spareTwo != null" >
        spare_two,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="groupId != null" >
        #{groupId,jdbcType=INTEGER},
      </if>
      <if test="numberPeople != null" >
        #{numberPeople,jdbcType=INTEGER},
      </if>
      <if test="groupType != null" >
        #{groupType,jdbcType=VARCHAR},
      </if>
      <if test="groupState != null" >
        #{groupState,jdbcType=INTEGER},
      </if>
      <if test="clusteringState != null" >
        #{clusteringState,jdbcType=INTEGER},
      </if>
      <if test="groupTarget != null" >
        #{groupTarget,jdbcType=INTEGER},
      </if>
      <if test="targetPrice != null" >
        #{targetPrice,jdbcType=DECIMAL},
      </if>
      <if test="groupPrice != null" >
        #{groupPrice,jdbcType=DECIMAL},
      </if>
      <if test="captain != null" >
        #{captain,jdbcType=INTEGER},
      </if>
      <if test="joinNumberPeople != null" >
        #{joinNumberPeople,jdbcType=INTEGER},
      </if>
      <if test="lackNumberPeople != null" >
        #{lackNumberPeople,jdbcType=INTEGER},
      </if>
      <if test="registerTime != null" >
        #{registerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="spareOne != null" >
        #{spareOne,jdbcType=VARCHAR},
      </if>
      <if test="spareTwo != null" >
        #{spareTwo,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.chuxin.pojo.GroupMasterExample" resultType="java.lang.Integer" >
    select count(*) from group_master
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update group_master
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.groupId != null" >
        group_id = #{record.groupId,jdbcType=INTEGER},
      </if>
      <if test="record.numberPeople != null" >
        number_people = #{record.numberPeople,jdbcType=INTEGER},
      </if>
      <if test="record.groupType != null" >
        group_type = #{record.groupType,jdbcType=VARCHAR},
      </if>
      <if test="record.groupState != null" >
        group_state = #{record.groupState,jdbcType=INTEGER},
      </if>
      <if test="record.clusteringState != null" >
        clustering_state = #{record.clusteringState,jdbcType=INTEGER},
      </if>
      <if test="record.groupTarget != null" >
        group_target = #{record.groupTarget,jdbcType=INTEGER},
      </if>
      <if test="record.targetPrice != null" >
        target_price = #{record.targetPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.groupPrice != null" >
        group_price = #{record.groupPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.captain != null" >
        captain = #{record.captain,jdbcType=INTEGER},
      </if>
      <if test="record.joinNumberPeople != null" >
        join_number_people = #{record.joinNumberPeople,jdbcType=INTEGER},
      </if>
      <if test="record.lackNumberPeople != null" >
        lack_number_people = #{record.lackNumberPeople,jdbcType=INTEGER},
      </if>
      <if test="record.registerTime != null" >
        register_time = #{record.registerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null" >
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.spareOne != null" >
        spare_one = #{record.spareOne,jdbcType=VARCHAR},
      </if>
      <if test="record.spareTwo != null" >
        spare_two = #{record.spareTwo,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update group_master
    set id = #{record.id,jdbcType=INTEGER},
      group_id = #{record.groupId,jdbcType=INTEGER},
      number_people = #{record.numberPeople,jdbcType=INTEGER},
      group_type = #{record.groupType,jdbcType=VARCHAR},
      group_state = #{record.groupState,jdbcType=INTEGER},
      clustering_state = #{record.clusteringState,jdbcType=INTEGER},
      group_target = #{record.groupTarget,jdbcType=INTEGER},
      target_price = #{record.targetPrice,jdbcType=DECIMAL},
      group_price = #{record.groupPrice,jdbcType=DECIMAL},
      captain = #{record.captain,jdbcType=INTEGER},
      join_number_people = #{record.joinNumberPeople,jdbcType=INTEGER},
      lack_number_people = #{record.lackNumberPeople,jdbcType=INTEGER},
      register_time = #{record.registerTime,jdbcType=TIMESTAMP},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      spare_one = #{record.spareOne,jdbcType=VARCHAR},
      spare_two = #{record.spareTwo,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.chuxin.pojo.GroupMaster" >
    update group_master
    <set >
      <if test="groupId != null" >
        group_id = #{groupId,jdbcType=INTEGER},
      </if>
      <if test="numberPeople != null" >
        number_people = #{numberPeople,jdbcType=INTEGER},
      </if>
      <if test="groupType != null" >
        group_type = #{groupType,jdbcType=VARCHAR},
      </if>
      <if test="groupState != null" >
        group_state = #{groupState,jdbcType=INTEGER},
      </if>
      <if test="clusteringState != null" >
        clustering_state = #{clusteringState,jdbcType=INTEGER},
      </if>
      <if test="groupTarget != null" >
        group_target = #{groupTarget,jdbcType=INTEGER},
      </if>
      <if test="targetPrice != null" >
        target_price = #{targetPrice,jdbcType=DECIMAL},
      </if>
      <if test="groupPrice != null" >
        group_price = #{groupPrice,jdbcType=DECIMAL},
      </if>
      <if test="captain != null" >
        captain = #{captain,jdbcType=INTEGER},
      </if>
      <if test="joinNumberPeople != null" >
        join_number_people = #{joinNumberPeople,jdbcType=INTEGER},
      </if>
      <if test="lackNumberPeople != null" >
        lack_number_people = #{lackNumberPeople,jdbcType=INTEGER},
      </if>
      <if test="registerTime != null" >
        register_time = #{registerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="spareOne != null" >
        spare_one = #{spareOne,jdbcType=VARCHAR},
      </if>
      <if test="spareTwo != null" >
        spare_two = #{spareTwo,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.chuxin.pojo.GroupMaster" >
    update group_master
    set group_id = #{groupId,jdbcType=INTEGER},
      number_people = #{numberPeople,jdbcType=INTEGER},
      group_type = #{groupType,jdbcType=VARCHAR},
      group_state = #{groupState,jdbcType=INTEGER},
      clustering_state = #{clusteringState,jdbcType=INTEGER},
      group_target = #{groupTarget,jdbcType=INTEGER},
      target_price = #{targetPrice,jdbcType=DECIMAL},
      group_price = #{groupPrice,jdbcType=DECIMAL},
      captain = #{captain,jdbcType=INTEGER},
      join_number_people = #{joinNumberPeople,jdbcType=INTEGER},
      lack_number_people = #{lackNumberPeople,jdbcType=INTEGER},
      register_time = #{registerTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      spare_one = #{spareOne,jdbcType=VARCHAR},
      spare_two = #{spareTwo,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>