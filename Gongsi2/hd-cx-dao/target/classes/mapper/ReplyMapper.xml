<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.chuxin.mapper.ReplyMapper" >
  <resultMap id="BaseResultMap" type="com.chuxin.pojo.Reply" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="comment_id" property="commentId" jdbcType="INTEGER" />
    <result column="reply_objective_id" property="replyObjectiveId" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="reply_content" property="replyContent" jdbcType="VARCHAR" />
    <result column="reply_user_id" property="replyUserId" jdbcType="INTEGER" />
    <result column="spare_one" property="spareOne" jdbcType="VARCHAR" />
    <result column="spare_two" property="spareTwo" jdbcType="VARCHAR" />
    <result column="reply_time" property="replyTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, comment_id, reply_objective_id, type, reply_content, reply_user_id, spare_one, 
    spare_two, reply_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.chuxin.pojo.ReplyExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from reply
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from reply
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from reply
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.chuxin.pojo.ReplyExample" >
    delete from reply
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.chuxin.pojo.Reply" >
    insert into reply (id, comment_id, reply_objective_id, 
      type, reply_content, reply_user_id, 
      spare_one, spare_two, reply_time
      )
    values (#{id,jdbcType=INTEGER}, #{commentId,jdbcType=INTEGER}, #{replyObjectiveId,jdbcType=INTEGER}, 
      #{type,jdbcType=VARCHAR}, #{replyContent,jdbcType=VARCHAR}, #{replyUserId,jdbcType=INTEGER}, 
      #{spareOne,jdbcType=VARCHAR}, #{spareTwo,jdbcType=VARCHAR}, #{replyTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.chuxin.pojo.Reply" >
    insert into reply
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="commentId != null" >
        comment_id,
      </if>
      <if test="replyObjectiveId != null" >
        reply_objective_id,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="replyContent != null" >
        reply_content,
      </if>
      <if test="replyUserId != null" >
        reply_user_id,
      </if>
      <if test="spareOne != null" >
        spare_one,
      </if>
      <if test="spareTwo != null" >
        spare_two,
      </if>
      <if test="replyTime != null" >
        reply_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="commentId != null" >
        #{commentId,jdbcType=INTEGER},
      </if>
      <if test="replyObjectiveId != null" >
        #{replyObjectiveId,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="replyContent != null" >
        #{replyContent,jdbcType=VARCHAR},
      </if>
      <if test="replyUserId != null" >
        #{replyUserId,jdbcType=INTEGER},
      </if>
      <if test="spareOne != null" >
        #{spareOne,jdbcType=VARCHAR},
      </if>
      <if test="spareTwo != null" >
        #{spareTwo,jdbcType=VARCHAR},
      </if>
      <if test="replyTime != null" >
        #{replyTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.chuxin.pojo.ReplyExample" resultType="java.lang.Integer" >
    select count(*) from reply
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update reply
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.commentId != null" >
        comment_id = #{record.commentId,jdbcType=INTEGER},
      </if>
      <if test="record.replyObjectiveId != null" >
        reply_objective_id = #{record.replyObjectiveId,jdbcType=INTEGER},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.replyContent != null" >
        reply_content = #{record.replyContent,jdbcType=VARCHAR},
      </if>
      <if test="record.replyUserId != null" >
        reply_user_id = #{record.replyUserId,jdbcType=INTEGER},
      </if>
      <if test="record.spareOne != null" >
        spare_one = #{record.spareOne,jdbcType=VARCHAR},
      </if>
      <if test="record.spareTwo != null" >
        spare_two = #{record.spareTwo,jdbcType=VARCHAR},
      </if>
      <if test="record.replyTime != null" >
        reply_time = #{record.replyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update reply
    set id = #{record.id,jdbcType=INTEGER},
      comment_id = #{record.commentId,jdbcType=INTEGER},
      reply_objective_id = #{record.replyObjectiveId,jdbcType=INTEGER},
      type = #{record.type,jdbcType=VARCHAR},
      reply_content = #{record.replyContent,jdbcType=VARCHAR},
      reply_user_id = #{record.replyUserId,jdbcType=INTEGER},
      spare_one = #{record.spareOne,jdbcType=VARCHAR},
      spare_two = #{record.spareTwo,jdbcType=VARCHAR},
      reply_time = #{record.replyTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.chuxin.pojo.Reply" >
    update reply
    <set >
      <if test="commentId != null" >
        comment_id = #{commentId,jdbcType=INTEGER},
      </if>
      <if test="replyObjectiveId != null" >
        reply_objective_id = #{replyObjectiveId,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="replyContent != null" >
        reply_content = #{replyContent,jdbcType=VARCHAR},
      </if>
      <if test="replyUserId != null" >
        reply_user_id = #{replyUserId,jdbcType=INTEGER},
      </if>
      <if test="spareOne != null" >
        spare_one = #{spareOne,jdbcType=VARCHAR},
      </if>
      <if test="spareTwo != null" >
        spare_two = #{spareTwo,jdbcType=VARCHAR},
      </if>
      <if test="replyTime != null" >
        reply_time = #{replyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.chuxin.pojo.Reply" >
    update reply
    set comment_id = #{commentId,jdbcType=INTEGER},
      reply_objective_id = #{replyObjectiveId,jdbcType=INTEGER},
      type = #{type,jdbcType=VARCHAR},
      reply_content = #{replyContent,jdbcType=VARCHAR},
      reply_user_id = #{replyUserId,jdbcType=INTEGER},
      spare_one = #{spareOne,jdbcType=VARCHAR},
      spare_two = #{spareTwo,jdbcType=VARCHAR},
      reply_time = #{replyTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>