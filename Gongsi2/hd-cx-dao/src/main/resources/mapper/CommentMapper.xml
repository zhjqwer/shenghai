<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.chuxin.mapper.CommentMapper" >
  <resultMap id="BaseResultMap" type="com.chuxin.pojo.Comment" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="comment_objective" property="commentObjective" jdbcType="INTEGER" />
    <result column="comment_content" property="commentContent" jdbcType="VARCHAR" />
    <result column="comment_user" property="commentUser" jdbcType="INTEGER" />
    <result column="service_score" property="serviceScore" jdbcType="INTEGER" />
    <result column="spare_one" property="spareOne" jdbcType="VARCHAR" />
    <result column="spare_two" property="spareTwo" jdbcType="VARCHAR" />
    <result column="comment_time" property="commentTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, type, comment_objective, comment_content, comment_user, service_score, spare_one, 
    spare_two, comment_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.chuxin.pojo.CommentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from comment
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from comment
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.chuxin.pojo.CommentExample" >
    delete from comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.chuxin.pojo.Comment" >
    insert into comment (id, type, comment_objective, 
      comment_content, comment_user, service_score, 
      spare_one, spare_two, comment_time
      )
    values (#{id,jdbcType=INTEGER}, #{type,jdbcType=VARCHAR}, #{commentObjective,jdbcType=INTEGER}, 
      #{commentContent,jdbcType=VARCHAR}, #{commentUser,jdbcType=INTEGER}, #{serviceScore,jdbcType=INTEGER}, 
      #{spareOne,jdbcType=VARCHAR}, #{spareTwo,jdbcType=VARCHAR}, #{commentTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.chuxin.pojo.Comment" >
    insert into comment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="commentObjective != null" >
        comment_objective,
      </if>
      <if test="commentContent != null" >
        comment_content,
      </if>
      <if test="commentUser != null" >
        comment_user,
      </if>
      <if test="serviceScore != null" >
        service_score,
      </if>
      <if test="spareOne != null" >
        spare_one,
      </if>
      <if test="spareTwo != null" >
        spare_two,
      </if>
      <if test="commentTime != null" >
        comment_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="commentObjective != null" >
        #{commentObjective,jdbcType=INTEGER},
      </if>
      <if test="commentContent != null" >
        #{commentContent,jdbcType=VARCHAR},
      </if>
      <if test="commentUser != null" >
        #{commentUser,jdbcType=INTEGER},
      </if>
      <if test="serviceScore != null" >
        #{serviceScore,jdbcType=INTEGER},
      </if>
      <if test="spareOne != null" >
        #{spareOne,jdbcType=VARCHAR},
      </if>
      <if test="spareTwo != null" >
        #{spareTwo,jdbcType=VARCHAR},
      </if>
      <if test="commentTime != null" >
        #{commentTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.chuxin.pojo.CommentExample" resultType="java.lang.Integer" >
    select count(*) from comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update comment
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.commentObjective != null" >
        comment_objective = #{record.commentObjective,jdbcType=INTEGER},
      </if>
      <if test="record.commentContent != null" >
        comment_content = #{record.commentContent,jdbcType=VARCHAR},
      </if>
      <if test="record.commentUser != null" >
        comment_user = #{record.commentUser,jdbcType=INTEGER},
      </if>
      <if test="record.serviceScore != null" >
        service_score = #{record.serviceScore,jdbcType=INTEGER},
      </if>
      <if test="record.spareOne != null" >
        spare_one = #{record.spareOne,jdbcType=VARCHAR},
      </if>
      <if test="record.spareTwo != null" >
        spare_two = #{record.spareTwo,jdbcType=VARCHAR},
      </if>
      <if test="record.commentTime != null" >
        comment_time = #{record.commentTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update comment
    set id = #{record.id,jdbcType=INTEGER},
      type = #{record.type,jdbcType=VARCHAR},
      comment_objective = #{record.commentObjective,jdbcType=INTEGER},
      comment_content = #{record.commentContent,jdbcType=VARCHAR},
      comment_user = #{record.commentUser,jdbcType=INTEGER},
      service_score = #{record.serviceScore,jdbcType=INTEGER},
      spare_one = #{record.spareOne,jdbcType=VARCHAR},
      spare_two = #{record.spareTwo,jdbcType=VARCHAR},
      comment_time = #{record.commentTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.chuxin.pojo.Comment" >
    update comment
    <set >
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="commentObjective != null" >
        comment_objective = #{commentObjective,jdbcType=INTEGER},
      </if>
      <if test="commentContent != null" >
        comment_content = #{commentContent,jdbcType=VARCHAR},
      </if>
      <if test="commentUser != null" >
        comment_user = #{commentUser,jdbcType=INTEGER},
      </if>
      <if test="serviceScore != null" >
        service_score = #{serviceScore,jdbcType=INTEGER},
      </if>
      <if test="spareOne != null" >
        spare_one = #{spareOne,jdbcType=VARCHAR},
      </if>
      <if test="spareTwo != null" >
        spare_two = #{spareTwo,jdbcType=VARCHAR},
      </if>
      <if test="commentTime != null" >
        comment_time = #{commentTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.chuxin.pojo.Comment" >
    update comment
    set type = #{type,jdbcType=VARCHAR},
      comment_objective = #{commentObjective,jdbcType=INTEGER},
      comment_content = #{commentContent,jdbcType=VARCHAR},
      comment_user = #{commentUser,jdbcType=INTEGER},
      service_score = #{serviceScore,jdbcType=INTEGER},
      spare_one = #{spareOne,jdbcType=VARCHAR},
      spare_two = #{spareTwo,jdbcType=VARCHAR},
      comment_time = #{commentTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>